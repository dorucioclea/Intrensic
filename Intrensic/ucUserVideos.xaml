<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" x:Class="Intrensic.ucUserVideos" 
             mc:Ignorable="d" 
             d:DesignHeight="400" d:DesignWidth="471" Uid="ucVideoList" x:Name="ucCustomVideoList" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" SizeChanged="ucCustomVideoList_SizeChanged" Background="Transparent" Margin="0,0,0,0" Padding="0,0,0,0" BorderThickness="0" Loaded="ucCustomVideoList_Loaded" Width="auto" Height="auto">
    <UserControl.Resources>

        <!--Control colors START-->
        <!--<Color x:Key="ControlBrushKey">Red</Color>-->
        <Color x:Key="WindowColor">#FFE8EDF9</Color>
        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
        <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
        <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

        <Color x:Key="SelectedBackgroundColor">#FF00233A</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

        <Color x:Key="ControlLightColor">White</Color>
        <Color x:Key="ControlMediumColor">#FF7381F9</Color>
        <Color x:Key="ControlDarkColor">#FF211AA9</Color>

        <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
        <Color x:Key="ControlPressedColor">#FF211AA9</Color>


        <Color x:Key="GlyphColor">#FF444444</Color>
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

        <!--Border colors-->
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>

        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

        <!--Control-specific resources.-->
        <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

        <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

        <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
            <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#000000FF"
                    Offset="0" />
                    <GradientStop Color="#600000FF"
                    Offset="0.4" />
                    <GradientStop Color="#600000FF"
                    Offset="0.6" />
                    <GradientStop Color="#000000FF"
                    Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>



        <!--MENU ITEM AND SEPARATOR-->
        <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#AAA" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#BBB" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="0.1"/>
                    <GradientStop Color="#EEE" Offset="0.9"/>
                    <GradientStop Color="#FFF" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />

        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />

        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#031537" />

        <!-- Border Brushes -->

        <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#CCC" Offset="0.0"/>
                    <GradientStop Color="#444" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#CCC" Offset="0.0"/>
                    <GradientStop Color="#444" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#777" Offset="0.0"/>
                    <GradientStop Color="#000" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#444" Offset="0.0"/>
                    <GradientStop Color="#888" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

        <SolidColorBrush x:Key="SolidBorderBrush" Color="#D9EAFE" />

        <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />

        <!-- Miscellaneous Brushes -->
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

        <SolidColorBrush x:Key="LightColorBrush" Color="#DDD" />


        <!--Control colors END-->

        <!--CONTEXT MENU START-->
        <Style TargetType="{x:Type ContextMenu}">
            <Setter Property="SnapsToDevicePixels"
          Value="True" />
            <Setter Property="OverridesDefaultStyle"
          Value="True" />
            <Setter Property="Grid.IsSharedSizeScope"
          Value="true" />
            <Setter Property="HasDropShadow"
          Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border x:Name="Border"
                Background="White"
                BorderThickness="1">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource BorderMediumColor}" />
                            </Border.BorderBrush>
                            <StackPanel IsItemsHost="True"
                      KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow"
                   Value="true">
                                <Setter TargetName="Border"
                    Property="Padding"
                    Value="0,0,0,0" />
                                <Setter TargetName="Border"
                    Property="CornerRadius"
                    Value="5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--CONTEXT MENU END-->

        <!--SEPARATOR START-->
        <Style x:Key="SeparatorStyle1"
       TargetType="Separator">
            <Setter Property="Height" Value="1"/>
            <Setter Property="Margin" Value="0,4,0,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Separator">
                        <Border BorderThickness="1" Background="#D9EAFE" BorderBrush="#D9EAFE"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="VisibleWhenHasNoteSeparator" TargetType="Separator">
            <Setter Property="Height" Value="1"/>
            <Setter Property="Margin" Value="0,4,0,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Separator">
                        <Border BorderThickness="1" Background="#D9EAFE" BorderBrush="#D9EAFE"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding HasNote}" Value="False">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--SEPARATOR END-->

        <!--MENU ITEM START-->


        <!-- TopLevelHeader -->
        <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
                 TargetType="MenuItem">
            <Border Name="Border" >
                <Grid>
                    <ContentPresenter 
        Margin="6,3,6,3" 
        ContentSource="Header"
        RecognizesAccessKey="True" />
                    <Popup 
        Name="Popup"
        Placement="Bottom"
        IsOpen="{TemplateBinding IsSubmenuOpen}"
        AllowsTransparency="True" 
        Focusable="False"
        PopupAnimation="Fade">
                        <Border 
          Name="SubmenuBorder"
          SnapsToDevicePixels="True"
          Background="#D9EAFE"
          BorderBrush="#D9EAFE"
          BorderThickness="1" >
                            <StackPanel  
            IsItemsHost="True" 
            KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background"
              Value="{StaticResource NormalBrush}"/>
                    <Setter TargetName="Border" Property="BorderBrush"
              Value="Transparent"/>
                </Trigger>
                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                    <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4"/>
                    <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <!-- TopLevelItem -->

        <ControlTemplate 
  x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" 
  TargetType="MenuItem">
            <Border Name="Border" >
                <Grid>
                    <ContentPresenter 
        Margin="6,3,6,3" 
        ContentSource="Header"
        RecognizesAccessKey="True" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background"
              Value="{StaticResource NormalBrush}"/>
                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground"
              Value="{StaticResource DisabledForegroundBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- SubmenuItem -->

        <ControlTemplate 
  x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" 
  TargetType="MenuItem">
            <Border Name="Border" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                        <ColumnDefinition Width="13"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter 
        Name="Icon"
        Margin="6,0,6,0"
        VerticalAlignment="Center"
        ContentSource="Icon"/>
                    <Border 
        Name="Check"  
        Width="13" Height="13" 
        Visibility="Collapsed"
        Margin="6,0,6,0" 
        Background="{StaticResource NormalBrush}"
        BorderThickness="1"
        BorderBrush="{StaticResource NormalBorderBrush}">
                        <Path 
          Name="CheckMark"
          Width="7" Height="7" 
          Visibility="Hidden" 
          SnapsToDevicePixels="False" 
          Stroke="{StaticResource GlyphBrush}"
          StrokeThickness="2"
          Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                    </Border>
                    <ContentPresenter 
        Name="HeaderHost"
        Grid.Column="1"
        ContentSource="Header"
        RecognizesAccessKey="True" VerticalAlignment="Center"/>
                    <TextBlock x:Name="InputGestureText"
        Grid.Column="2"
        Text="{TemplateBinding InputGestureText}"
        Margin="5,2.5,5,2.5"
        DockPanel.Dock="Right" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsCheckable" Value="true">
                    <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background"
              Value="{StaticResource SelectedBackgroundBrush}"/>
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- SubmenuHeader -->

        <ControlTemplate 
  x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" 
  TargetType="MenuItem">
            <Border Name="Border" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                        <ColumnDefinition Width="13"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter 
        Name="Icon"
        Margin="6,0,6,0"
        VerticalAlignment="Center"
        ContentSource="Icon"/>
                    <ContentPresenter 
        Name="HeaderHost"
        Grid.Column="1"
        ContentSource="Header"
        RecognizesAccessKey="True"/>
                    <TextBlock x:Name="InputGestureText"
        Grid.Column="2"
        Text="{TemplateBinding InputGestureText}"
        Margin="5,2,2,2"
        DockPanel.Dock="Right"/>
                    <Path 
        Grid.Column="3"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Data="M 0 0 L 0 7 L 4 3.5 Z" 
        Fill="{StaticResource GlyphBrush}" />
                    <Popup 
        Name="Popup"
        Placement="Right"
        HorizontalOffset="-4" 
        IsOpen="{TemplateBinding IsSubmenuOpen}"
        AllowsTransparency="True" 
        Focusable="False"
        PopupAnimation="Fade">
                        <Border 
          Name="SubmenuBorder"
          SnapsToDevicePixels="True"
          Background="{StaticResource WindowBackgroundBrush}"
          BorderBrush="{StaticResource SolidBorderBrush}"
          BorderThickness="1" >
                            <StackPanel  
            IsItemsHost="True" 
            KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background"
              Value="{StaticResource SelectedBackgroundBrush}"/>
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                    <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4"/>
                    <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- MenuItem Style -->

        <Style x:Key="MenuItemStyle1" TargetType="MenuItem" >
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Background" Value="White" />
            <Setter Property="Foreground" Value="#4080FE" />
            
            <Style.Triggers>
                <Trigger Property="Role" Value="TopLevelHeader">
                    <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
                    <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                </Trigger>
                <Trigger Property="Role" Value="TopLevelItem">
                    <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuHeader">
                    <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuItem">
                    <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="VisibleWhenHasNoteMenuItem" TargetType="MenuItem" >
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Background" Value="White" />
            <Setter Property="Foreground" Value="#4080FE" />
            <Style.Triggers>
                <Trigger Property="Role" Value="TopLevelHeader">
                    <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
                    <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                </Trigger>
                <Trigger Property="Role" Value="TopLevelItem">
                    <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuHeader">
                    <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuItem">
                    <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
                </Trigger>
                <DataTrigger Binding="{Binding HasNote}" Value="false">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--<Style TargetType="ListViewItem">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightGreen"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="LightBlue"/>
            </Style.Resources>
        </Style>-->

        <Style TargetType="{x:Type ListViewItem}">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" 
                         Color="{DynamicResource {x:Static SystemColors.HighlightColorKey}}"/>
            </Style.Resources>
        </Style>
        
        
        

        <!--MENU ITEM END-->

    </UserControl.Resources>
    
    <Grid x:Name="ucUserVideoControl" Uid="usUserVideos" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="auto" Height="auto" Margin="0,0,0,0">


        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0*"/>
            <ColumnDefinition Width="7*"/>
            <ColumnDefinition Width="200*"/>
        </Grid.ColumnDefinitions>

        <ListView HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SelectionMode="Extended"  Uid="lvItems" x:Name="lvItemsContainer" MouseUp="lvItemsContainer_MouseUp" SelectionChanged="lvItemsContainer_SelectionChanged" Grid.ColumnSpan="3" BorderBrush="{x:Null}" Background="Transparent" LostFocus="lvItemsContainer_LostFocus" Width="auto" Height="auto" Padding="0" BorderThickness="0" >
            <ListView.ContextMenu>
                <ContextMenu x:Name="cmListItem" Opened="ContextMenu_Opened" Background="White" Margin="0,0" Padding="0,0" Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=ContextMenuVisibility}" MouseMove="cmListItem_MouseMove">
                    <MenuItem x:Name="muPreview" Margin="0,0" Padding="0,0" Header="Preview" Click="muPreview_Click" Style="{DynamicResource MenuItemStyle1}"/>
                    <Separator x:Name="sepDownload" Background="#74B2FD" Foreground="#74B2FD" BorderBrush="#74B2FD" Margin="0,0" Padding="0,0" Style="{DynamicResource SeparatorStyle1}" />
                    <MenuItem x:Name="muDownload" Header="Download from Server"  Style="{DynamicResource MenuItemStyle1}" Click="muDownload_Click"/>
                    <Separator x:Name="sepDownloadAndValidate" Background="#74B2FD" Foreground="#74B2FD" BorderBrush="#74B2FD" Margin="0,0" Padding="0,0" Style="{DynamicResource SeparatorStyle1}" />
                    <MenuItem x:Name="muDownloadAndValidate" Header="Download from Server And Validate"  Style="{DynamicResource MenuItemStyle1}" Click="muDownloadAndValidate_Click"/>
                    <Separator x:Name="sepNote" Background="#74B2FD" Foreground="#74B2FD" BorderBrush="#74B2FD" Margin="0,0" Padding="0,0" Style="{DynamicResource SeparatorStyle1}" />
                    <MenuItem x:Name="muNote" Header="Case Activity" Margin="0,0"  Style="{StaticResource MenuItemStyle1}" Click="muNote_Click" />
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>                    
                    <WrapPanel Name="wpContainer" IsItemsHost="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Loaded="wpContainer_Loaded" Width="auto" Height="auto" />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            
            <ListView.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Vertical" Height="130" Width="320" Margin="0,5,5,5" OverridesDefaultStyle="True">
                        <WrapPanel Orientation="Horizontal" LostFocus="WrapPanel_LostFocus" OverridesDefaultStyle="True" MouseDown="WrapPanel_MouseDown" >
                            
                            <Image Source="Resources/Video.png" Width="100" Height="60" Margin="0, 0, 20,0"/>
                            <StackPanel>
                                <StackPanel.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Margin" Value="0,0" />
                                        <Setter Property="Padding" Value="0,0" />
                                    </Style>
                                </StackPanel.Resources>
                                <WrapPanel Orientation="Vertical" Margin="0,0,0,0" VerticalAlignment="Center">
                                    <WrapPanel.Resources>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Margin" Value="0,0" />
                                            <Setter Property="Padding" Value="0,0" />
                                            <Setter Property="Foreground" Value="White" />
                                            <!--<Setter Property="FontSize" Value="8px" />-->
                                        </Style>
                                        <Style TargetType="{x:Type TextBox}">
                                            <Setter Property="Margin" Value="0,0" />
                                            <Setter Property="Padding" Value="0,0" />
                                            <!--<Setter Property="FontSize" Value="8px" />-->
                                        </Style>
                                    </WrapPanel.Resources>
                                    <!--<Viewbox Stretch="Uniform" Width="101" Height="20">-->
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Name="tbxUsername" Text="Username: " Padding="0,0"/>
                                        <TextBlock Width="101" Text="{Binding UserName}" Padding="0,0" Margin="0, 0, 0,3"  TextTrimming="CharacterEllipsis" ToolTip="{Binding UserName}"/>
                                    </StackPanel>
                                    <!--</Viewbox>-->
                                    <!--<Viewbox Stretch="Uniform" Width="1" Height="20"  Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=ArchiveVisibility}">-->
									<!--Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=ArchiveVisibility}"-->
                                    <StackPanel Orientation="Horizontal" >
                                        <TextBlock Text="Created date: " Padding="0,0" Margin="0, 2, 0, 0"/>
                                        <TextBlock Text="{Binding OriginalFileDate, StringFormat='{}{0:MM/dd/yyyy hh:mm tt}'}" Padding="0,0" Margin="0,3" TextTrimming="CharacterEllipsis" >
                                            <TextBlock.ToolTip>
                                                <StackPanel>
                                                    <TextBlock Foreground="Gray" Text="{Binding OriginalFileDate}" />
                                                </StackPanel>
                                            </TextBlock.ToolTip>
                                        </TextBlock>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=ArchiveVisibility}">
                                        <TextBlock Text="Duration: " Padding="0,0" Margin="0, 2, 0, 0"/>
                                        <TextBlock Text="{Binding DurationFormat}" Padding="0,0" Margin="0,3" TextTrimming="CharacterEllipsis" ToolTip="{Binding DurationFormat}" />
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=ArchiveVisibility}">
                                        <TextBlock Text="Resolution: " Padding="0,0" Margin="0, 2, 0, 0"/>
                                        <TextBlock Text="{Binding Resolution}" Padding="0,0" Margin="0,3"  TextTrimming="CharacterEllipsis" ToolTip="{Binding Resolution}" />
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Name: " Padding="0,0" Margin="0, 2, 0, 0"/>
                                        <TextBlock Text="{Binding NewFileName}" Padding="0,0" Margin="0,3" TextTrimming="CharacterEllipsis" ToolTip="{Binding NewFileName}" />
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=ArchiveVisibility}">
                                        <TextBlock Text="Note: " Padding="0,0" Margin="0, 2, 0, 0"/>
                                        <TextBlock Text="{Binding Note}" Padding="0,0" Margin="0,3, 0, 1" TextTrimming="CharacterEllipsis" ToolTip="{Binding Note}" />
                                    </StackPanel>
                                    <!-- ArchiveVisibility -->
                                    <!--</Viewbox>-->
                                    <!--<Viewbox Stretch="Uniform" Width="1" Height="20" Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=ArchiveVisibility}">-->

                                    <TextBox AcceptsReturn="True" Height="25" Margin="0, -110, 0, 0" Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=UploadVisibility}"  TextWrapping="Wrap" ToolTip="Please Enter Note" MaxLines="3" Text="{Binding Note}" >
                                        <TextBox.Style>
                                            <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                                <Style.Resources>
                                                    <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                                        <VisualBrush.Visual>
                                                            <Label Content="Add note" Foreground="LightGray" />
                                                        </VisualBrush.Visual>
                                                    </VisualBrush>
                                                </Style.Resources>
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                                        <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="{x:Null}">
                                                        <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="IsKeyboardFocused" Value="True">
                                                        <Setter Property="Background" Value="White" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>

                                    <!--</Viewbox>-->                                    
                                </WrapPanel>
                            </StackPanel>
                        </WrapPanel>
                    </StackPanel>
                </DataTemplate>
            </ListView.ItemTemplate>



        </ListView>




    </Grid>
</UserControl>
